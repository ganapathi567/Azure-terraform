# Specify the base image -- here we're using one that bundles the OpenJDK version of Java 8 on top of a generic Debian Linux OS
FROM ubuntu:18.04

#Set the working directory to be used when the docker gets run
WORKDIR /usr

# Update the image to the latest packages
RUN apt-get update && apt-get upgrade -y

########### install JAVA 8 ##########
RUN apt-get install -y openjdk-8-jdk

########### install docker ##########
ARG DOCKER_CLIENT=docker-17.06.2-ce.tgz

RUN apt-get update && \
        apt-get install -y \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg \
        lsb-release

RUN cd /tmp/ \
&& curl -sSL -O https://download.docker.com/linux/static/stable/x86_64/${DOCKER_CLIENT} \
&& tar zxf ${DOCKER_CLIENT} \
&& mkdir -p /usr/local/bin \
&& mv ./docker/docker /usr/local/bin \
&& chmod +x /usr/local/bin/docker \
&& rm -rf /tmp/*

########### install kubectl ##########
RUN apt-get update \
&& apt-get install -y apt-transport-https ca-certificates curl \
&& curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg \
&& echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list \
&& apt-get update && apt-get install -y kubectl

########### install helm ##########
RUN curl https://baltocdn.com/helm/signing.asc | apt-key add - \
&& apt-get install apt-transport-https --yes \
&& echo "deb https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list \
&& apt-get update \
&& apt-get install -y helm


########### install azure cli ##########
RUN curl -sL https://aka.ms/InstallAzureCLIDeb | bash

CMD ls